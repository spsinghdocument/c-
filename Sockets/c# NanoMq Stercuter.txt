//=====================================Sever

//using System;
//using System.Text;
//using System.Net;
//using System.Net.Sockets;

//public class serv
//{
//    public static void Main()
//    {
//        try
//        {
//            IPAddress ipAd = IPAddress.Parse("127.0.0.1"); //use local m/c IP address, and use the same in the client

//            /* Initializes the Listener */
//            TcpListener myList = new TcpListener(ipAd, 8001);

//            /* Start Listeneting at the specified port */
//            myList.Start();

//            Console.WriteLine("The server is running at port 8001...");
//            Console.WriteLine("The local End point is  :" + myList.LocalEndpoint);
//            Console.WriteLine("Waiting for a connection.....");

//            Socket s = myList.AcceptSocket();
//            Console.WriteLine("Connection accepted from " + s.RemoteEndPoint);

//            byte[] b = new byte[100];
//            int k = s.Receive(b);
//            Console.WriteLine("Recieved...");
//            for (int i = 0; i < k; i++)
//                Console.Write(Convert.ToChar(b[i]));

//            ASCIIEncoding asen = new ASCIIEncoding();
//            s.Send(asen.GetBytes("The string was recieved by the server."));
//            Console.WriteLine("\nSent Acknowledgement");
//            /* clean up */
//            s.Close();
//            myList.Stop();
//            Console.ReadLine();

           

//        }
//        catch (Exception e)
//        {
//            Console.WriteLine("Error..... " + e.StackTrace);
//        }
//    }

//}
using System;
using NNanomsg.Protocols;
using System.Net;
using System.Text;
using System.Threading;
using NNanomsg;
using System.Linq;
using Structure;

namespace LzoNseFO
{

    class A
    {
        public static void Main()
        {

            send();
            //sendInput();
            Console.ReadLine();
        }

       static void send()
        {

            PublishSocket PubClient = new PublishSocket();
            string str = "127.0.0.1" + ":" + "8001";
            //  string str = "192.168.168.97" + ":" + "8001";
            PubClient.Bind("tcp://" + str);
            Console.WriteLine("Nana Mcast Addrs: " + "tcp://" + str);

             Console.WriteLine("PLZ Enter Name");
            string name = Console.ReadLine();
            Console.WriteLine("PLZ Enter Last Name");
           String lastName = Console.ReadLine();
            Console.WriteLine("PLZ Enter AGE");
           int age = Convert.ToInt32(Console.ReadLine());

           strucsp s = new strucsp();
          
               s.Name = name;
               s.LastName = lastName;
               s.age = age;
       

         
          
           

           

            //string sp = Console.ReadLine();

           // var intBytes = BitConverter.GetBytes(Convert.ToInt64(555));
           // NNFHandler.Instance.Publisher(77, DataPacket.RawSerialize(s));
           byte[] buffer = DataPacket.RawSerialize(s);
         //  intBytes = intBytes.Concat(buffer.ToArray());

            // intBytes = intBytes.Concat(Encoding.ASCII.GetBytes(sp)).ToArray(); 
               Thread.Sleep(10000);
            // PubClient.Send(intBytes);
               var e = PubClient.SendImmediate(BitConverter.GetBytes(Convert.ToInt64(555)).Concat(buffer).ToArray());
        }
        //===================================================================================

       
        //==================================================================


       static void sendInput()
       {

           PublishSocket PubClient = new PublishSocket();
           string str = "127.0.0.1" + ":" + "8002";
           PubClient.Bind("tcp://" + str);
           Console.WriteLine("Nana Mcast Addrs: " + "tcp://" + str);
           Console.WriteLine("PLZ Inter Number");
           
           int line = Convert.ToInt32( Console.ReadLine());


           var intBytes = BitConverter.GetBytes(Convert.ToInt64(line));



           // intBytes = intBytes.Concat(buffer).ToArray(); 
           Thread.Sleep(10000);
           var e = PubClient.SendImmediate(intBytes);
       }

    }

//========================================================================

     [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 1)]
        public struct strucsp
    {
         [System.Runtime.InteropServices.MarshalAsAttribute(System.Runtime.InteropServices.UnmanagedType.ByValTStr, SizeConst = 10)]
        public string Name;
         [System.Runtime.InteropServices.MarshalAsAttribute(System.Runtime.InteropServices.UnmanagedType.ByValTStr, SizeConst = 10)]
        public string LastName;

        public int age;

    }

  }
//===================================================================Client

//using System;
//using System.IO;
//using System.Net;
//using System.Text;
//using System.Net.Sockets;


//public class clnt
//{

//    public static void Main()
//    {

//        try
//        {
//            TcpClient tcpclnt = new TcpClient();
//            Console.WriteLine("Connecting.....");

//            tcpclnt.Connect("127.0.0.1", 8001); // use the ipaddress as in the server program

//            Console.WriteLine("Connected");
//            Console.Write("Enter the string to be transmitted : ");

//            String str = Console.ReadLine();
//            Stream stm = tcpclnt.GetStream();

//            ASCIIEncoding asen = new ASCIIEncoding();
//            byte[] ba = asen.GetBytes(str);
//            Console.WriteLine("Transmitting.....");

//            stm.Write(ba, 0, ba.Length);

//            byte[] bb = new byte[100];
//            int k = stm.Read(bb, 0, 100);

//            for (int i = 0; i < k; i++)
//                Console.Write(Convert.ToChar(bb[i]));

//            tcpclnt.Close();
//            Console.ReadKey();
//        }

//        catch (Exception e)
//        {
//            Console.WriteLine("Error..... " + e.StackTrace);
//        }
//    }

//}
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

//using ZeroMQ;
using NNanomsg.Protocols;
using Structure;


namespace Client
{
    class A
    {
        public static void Main()
        {
            resved2();
           // resvedInput();
           
            }



        //public static void resved()
        //{
        //    try
        //    {
        //        //  SubscribeSocket subscriber = null;

        //        SubscribeSocket subscriber = new SubscribeSocket();
        //        subscriber.Connect("tcp://" + "127.0.0.1" + ":" + "8001");
        //       // subscriber.Connect("tcp://" + "192.168.168.97" + ":" + "8001");
        //        Console.WriteLine("NANOMQ UDP_Reciever Start DataAddress: " + "tcp://" + "127.0.0.1" + ":" + "8001");
        //        subscriber.Subscribe(BitConverter.GetBytes(Convert.ToInt64(555)));
        //        var buffer = subscriber.Receive();
        //        Console.WriteLine("" +Encoding.ASCII.GetString(buffer.Skip(8).Take(buffer.Length).ToArray()));

        //        Console.ReadLine();

        //    }
        //    catch (Exception ex)
        //    {
        //        Console.WriteLine(ex.InnerException.ToString());
        //    }
        
        
        //}


        public static void resved2()
        {
            try
            {
                //  SubscribeSocket subscriber = null;

                SubscribeSocket subscriber = new SubscribeSocket();
                subscriber.Connect("tcp://" + "127.0.0.1" + ":" + "8001");
                // subscriber.Connect("tcp://" + "192.168.168.97" + ":" + "8001");
                Console.WriteLine("NANOMQ UDP_Reciever Start DataAddress: " + "tcp://" + "127.0.0.1" + ":" + "8001");
                subscriber.Subscribe(BitConverter.GetBytes(Convert.ToInt64(555)));
                strucsp s = new strucsp();
                var buffer = subscriber.Receive();
                s =(strucsp) DataPacket.RawDeserialize((buffer.Skip(8).ToArray()),typeof(strucsp));
                Console.WriteLine("" +s.Name);
                Console.WriteLine("" + s.LastName);
                Console.WriteLine("" + s.age);
                Console.ReadLine();

            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.InnerException.ToString());
            }


        }


    }

    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 1)]
    public struct strucsp
    {
          [System.Runtime.InteropServices.MarshalAsAttribute(System.Runtime.InteropServices.UnmanagedType.ByValTStr,SizeConst=10)]
        public string Name;
        [System.Runtime.InteropServices.MarshalAsAttribute(System.Runtime.InteropServices.UnmanagedType.ByValTStr, SizeConst = 10)]
        public string LastName;

        public int age;

    }
}